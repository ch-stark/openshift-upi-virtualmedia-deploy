global
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        {{ ansible_user }}
    group       {{ ansible_user }}
    daemon

defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

frontend kubeapi
    mode tcp
    bind *:6443
    option tcplog
    default_backend kubeapi-main

frontend mcs
    bind *:22623
    default_backend mcs-main
    mode tcp
    option tcplog

frontend http
    bind *:80
    mode tcp
    default_backend http-main
    option tcplog

frontend https
    bind *:443
    mode tcp
    default_backend https-main
    option tcplog

backend kubeapi-main
    balance source
    mode tcp
    server bootstrap-{{ cluster }} {{ gateway_with_mask | next_nth_usable(9) }}:6443 check
    {% for n in range(num_masters) %}
    server master-{{ cluster }}-{{ n+1 }} {{ gateway_with_mask | next_nth_usable(n+10) }}:6443 check
    {% endfor %}

backend mcs-main
    balance source
    mode tcp
    server bootstrap-{{ cluster }} {{ gateway_with_mask | next_nth_usable(9) }}:22623 check
    {% for n in range(num_masters) %}
    server master-{{ cluster }}-{{ n+1 }} {{ gateway_with_mask | next_nth_usable(n+10) }}:22623 check
    {% endfor %}

backend http-main
    balance source
    mode tcp
    {% if num_workers > 0 %}
    {% for n in range(num_workers) %}
    server worker-{{ cluster }}-{{ n+1 }} {{ gateway_with_mask | next_nth_usable(n+20) }}:80 check
    {% endfor %}
    {% else %}
    {% for n in range(num_masters) %}
    server master-{{ cluster }}-{{ n+1 }} {{ gateway_with_mask | next_nth_usable(n+10) }}:80 check
    {% endfor %}
    {% endif %}

backend https-main
    balance source
    mode tcp
    {% if num_workers > 0 %}
    {% for n in range(num_workers) %}
    server worker-{{ cluster }}-{{ n+1 }} {{ gateway_with_mask | next_nth_usable(n+20) }}:443 check
    {% endfor %}
    {% else %}
    {% for n in range(num_masters) %}
    server master-{{ cluster }}-{{ n+1 }} {{ gateway_with_mask | next_nth_usable(n+10) }}:443 check
    {% endfor %}
    {% endif %}
